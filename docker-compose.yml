version: '3'
networks:
  krakend-net:
    driver: bridge
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - krakend-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - krakend-net
  # KrakenD API Gateway
  krakend:
    image: devopsfaith/krakend:latest
    container_name: krakend
    volumes:
      - ./krakend.json:/etc/krakend/krakend.json
    ports:
      - "8000:8000"
    restart: always
    networks:
      - krakend-net
    depends_on:
      - rental-room-service
    environment:
      - KRAKEND_PORT=8000
  # Rental Room Service
  rental-room-service:
    build:
      context: ./rental-room-service
      dockerfile: Dockerfile
    container_name: rental-room-service
    ports:
      - "8081:8081"
    restart: always
    networks:
      - krakend-net
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8083:8083"
    restart: always
    networks:
      - krakend-net
    depends_on:
      - kafka
      - zookeeper
  listing-service:
    build:
      context: ./listing-service
      dockerfile: ./Dockerfile
    container_name: listing-service
    ports:
      - "8082:8082"
    restart: "always"
    networks:
      - krakend-net
    depends_on:
      - kafka
  rating-service:
    build:
      context: ./rating-service
      dockerfile: Dockerfile
    container_name: rating-service
    ports:
      - "8085:8085"
    restart: always
    networks:
      - krakend-net
    depends_on:
      - kafka